# This is a template file. In production, secrets should be managed via:
# - AWS Secrets Manager with External Secrets Operator
# - HashiCorp Vault
# - Sealed Secrets
# - Never commit actual secrets to git

apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: production
  annotations:
    # Use External Secrets Operator to sync from AWS Secrets Manager
    external-secrets.io/secret-key: "production/database"
type: Opaque
stringData:
  url: "postgresql://PLACEHOLDER_USER:PLACEHOLDER_PASSWORD@rds-endpoint:5432/autodmca_prod"
  host: "rds-endpoint.region.rds.amazonaws.com"
  user: "PLACEHOLDER_USER"
  password: "PLACEHOLDER_PASSWORD"
  name: "autodmca_prod"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/redis"
type: Opaque
stringData:
  url: "redis://elasticache-endpoint:6379/0"
  host: "elasticache-endpoint.cache.amazonaws.com"
  port: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/app"
type: Opaque
stringData:
  secret-key: "PLACEHOLDER_SECRET_KEY_CHANGE_IN_PRODUCTION"
  jwt-secret: "PLACEHOLDER_JWT_SECRET_CHANGE_IN_PRODUCTION"
---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/stripe"
type: Opaque
stringData:
  secret-key: "sk_live_PLACEHOLDER_STRIPE_SECRET"
  webhook-secret: "whsec_PLACEHOLDER_WEBHOOK_SECRET"
  public-key: "pk_live_PLACEHOLDER_STRIPE_PUBLIC"
---
apiVersion: v1
kind: Secret
metadata:
  name: openai-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/openai"
type: Opaque
stringData:
  api-key: "sk-PLACEHOLDER_OPENAI_API_KEY"
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/aws"
type: Opaque
stringData:
  access-key-id: "PLACEHOLDER_AWS_ACCESS_KEY_ID"
  secret-access-key: "PLACEHOLDER_AWS_SECRET_ACCESS_KEY"
  region: "us-west-2"
---
apiVersion: v1
kind: Secret
metadata:
  name: sentry-secret
  namespace: production
  annotations:
    external-secrets.io/secret-key: "production/sentry"
type: Opaque
stringData:
  dsn: "https://PLACEHOLDER_SENTRY_DSN@sentry.io/project"
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: production
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  # These will be populated by cert-manager
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Base64 encoded private key