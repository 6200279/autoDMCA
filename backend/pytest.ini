[tool:pytest]
# Test discovery
testpaths = app/tests tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-branch
    --cov-fail-under=80
    --html=reports/pytest_report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/pytest_report.json
    --maxfail=10
    --disable-warnings

# Async support
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test multiple components together
    api: Tests that make HTTP requests to API endpoints
    database: Tests that interact with the database
    external: Tests that interact with external services (requires mocking)
    ai: Tests for AI/ML components and models
    security: Security-focused tests
    performance: Performance and load tests
    slow: Tests that take a long time to run
    requires_network: Tests that require network access
    requires_docker: Tests that require Docker containers
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for known issues
    flaky: Tests that may be unstable and need special handling

# Filters
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::RuntimeWarning

# Test timeout
timeout = 300
timeout_method = thread

# Coverage settings
cov_config = .coveragerc

# Parallel execution
dist = worksteal
numprocesses = auto

# JUnit XML for CI
junit_family = xunit2